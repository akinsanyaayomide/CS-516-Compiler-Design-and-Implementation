int sqrt (int n) {
  if (n < 0) {
    return 0;
  }
  var s = 0;
  while (n > 0) {
    var d = s * s;
    if (d > n) {
      n = -1;
    } else {
      s = s + 1;
    }
  }
  return s - 1;
}

int abs (int n) {
    if  (n>0){return n;}
else {return n*-1;}}

int side_length(Point p1, Point p2) {
  var m1 = abs((p1.x - p2.x));
  var m2 = abs((p1.y - p2.y));
  if (m1 > m2) {
    return m1 - m2;
  } else {
    return m2 - m1;
  }
}

int area(Rectangle t) {
  var s1 = side_length(t.p1, t.p2);
  var s2 = side_length(t.p1, t.p4);
  return (s1 * s2);
}

struct Rectangle {
  Point p1;
  Point p2;
  Point p3;
  Point p4}

struct Point {
  int x;
  int y
}

global points = new Point[] {Point { x = 0; y = 0 },Point { x = 4; y = 0 },Point { x = 4; y = 5 },Point { x = 0; y = 5 }};

int program(int argc, string[] argv) {
  var t = new Rectangle {p1 = points[0]; p2 = points[1]; p3 = points[2]; p3 = points[3] };
  return area(t);
}